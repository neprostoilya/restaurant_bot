import re

from aiogram import Router
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.utils.markdown import hbold

from api_requests.requests import check_manager_api
from keyboards.menu_manager_kb import main_menu_manager_kb

router_commands = Router()


@router_commands.message(CommandStart())
async def command_start_manager_bot_handler(message: Message, state: FSMContext) -> None:
    """
    Reaction on command '/start' in manager bot
    """    
    
    chat_id: int = message.from_user.id
    
    await message.answer(
        text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ' + hbold(message.from_user.full_name)
    )
    
    manager_user: bool = check_manager_api(
        chat_id=chat_id
    )
    
    if manager_user:
        await message.answer(
            text='–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! üòâ'
        )
        await message.answer(
            text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:',
            reply_markup=main_menu_manager_kb()
        )
    else:
        await message.answer(
            text='–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞! –í—ã –Ω–µ –º–µ–Ω–µ–Ω–¥–∂–µ—Ä. üò•'
        )
        await state.clear()


@router_commands.message(Command('about'))
async def command_about_handler(message: Message) -> None:
    """
    Reaction on command '/about'
    """
    await message.answer(
        text=f'–≠—Ç–æ—Ç –±–æ—Ç –¥–ª—è –º–µ–Ω–µ–Ω–¥–∂–µ—Ä–æ–≤'
    )


@router_commands.message(Command('help'))
async def command_help_handler(message: Message) -> None:
    """
    Reaction on command '/help'
    """
    await message.answer(
        text=f"–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –∑–≤–æ–Ω–∏—Ç–µ –∏–ª–∏ –ø–∏—à–∏—Ç–µ –∫ ..."
    )
